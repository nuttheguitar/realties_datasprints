library(pROC)
install.packages("pROC")
library(randomForest)
library(pROC)
install.packages("randomForest")
library(randomForest)
set.seed(420)
num.samples <- 100
weight <- sort(rnorm(n=num.samples, mean=172, sd=29))
obese <- ifelse(test=(runif(n=num.samples) < (rank(weight)/100)), yes=1, no=0)
obese
plot(x=weight, y=obese)
glm.fit=glm(obese ~ weight, family=binomial)
lines(weight, glm.fit$fitted.values)
roc(obese, glm.fit$fitted.values, plot=TRUE)
par(pty = 's')
roc(obese, glm.fit$fitted.values, plot=TRUE)
roc(obese, glm.fit$fitted.values, plot=TRUE, legacy.axes=TRUE)
roc.df <- data.frame()
roc.df <- data.frame(
tpp=roc.info$specificities*100,
fpp=(1-roc.info$specificities*100,)
fpp=(1-roc.info$specificities*100,
roc.df <- data.frame(
tpp=roc.info$specificities*100,
fpp=(1-roc.info$specificities*100,
fpp=(1-roc.info$specificities*100),
roc.df <- data.frame(
tpp=roc.info$specificities*100,
fpp=(1-roc.info$specificities*100),
thresholds=roc.info$thresholds)
roc.info
roc
library(readxl)
install.packages("rjson")
install.packages("rjson")
library("rjson")
getwd
getwd()
setwd('/Users/nuttakanwiriyakrieng/Documents/AIESEC/DataSprints')
getwd()
result <- fromJSON(file = "realties.json")
json_data_frame <- as.data.frame(result)
dim(json_data_frame)
dim(result)
result
result <- fromJSON(file) %>% as.data.frame
fromJSON(file) %>% as.data.frame
install.packages("magrittr")
install.packages("dplyr")
library(magrittr)
library(dplyr)
result <- fromJSON(file) %>% as.data.frame
fromJSON(file) %>% as.data.frame
as.data.frame(result)
library(jsonlite)
install.packages('jsonlite')
library(jsonlite)
data <- result$rows
name(data)
names(dat)
names(data)
dat <- result$rows
names(dat)
reult
result
result %>% as.data.frame
result
dat <- result$rows
dat
rm(dat)
